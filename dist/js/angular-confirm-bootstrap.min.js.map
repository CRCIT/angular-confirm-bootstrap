{"version":3,"sources":["angular-confirm-bootstrap.js"],"names":["angular","module","angularConfirmBootstrapController","$uibModalInstance","Setting","vm","this","dataModal","data","closeModal","dismiss","actionCancel","undefined","acbOnCancel","close","actionOk","acbOnConfirm","controller","$inject","angularConfirmBootstrapDirective","directiveConfirmController","$uibModal","$translate","confirmValues","acbConfirmText","acbButtonConfirmIcon","acbButtonConfirmClass","acbCancelText","acbButtonCancelIcon","acbButtonCancelClass","acbMessage","acbTitle","acbPositionButtons","acbSizeModal","acbBackdrop","openModal","modalInstance","open","keyboard","backdrop","templateUrl","size","controllerAs","resolve","result","then","directive","restrict","scope","link","element","attr","$","on","e","stopPropagation","bindToController","run","$templateCache","put"],"mappings":"CAOA,WACE,YAOAA,SAAQC,OAAO,6BACb,2BAKJ,WACE,YAMA,SAASC,GAAkCC,EAAmBC,GAC5D,GAAIC,GAAKC,IACTD,GAAGE,UAAYH,EAAQI,KAEvBH,EAAGI,WAAa,WACdN,EAAkBO,QAAQ,WAG5BL,EAAGM,aAAe,WACiBC,SAA7BP,EAAGE,UAAUM,mBACJR,GAAGE,UAAqB,mBAAY,WAC7CF,EAAGE,UAAUM,cAGjBV,EAAkBW,OAAM,IAG1BT,EAAGU,SAAW,WACsBH,SAA9BP,EAAGE,UAAUS,oBACJX,GAAGE,UAAsB,oBAAY,WAC9CF,EAAGE,UAAUS,eAGjBb,EAAkBW,OAAM,IA3B5Bd,QACGC,OAAO,6BACPgB,WAAW,oCAAqCf,GA6BnDA,EAAkCgB,SAAW,oBAAqB,cAIpE,WACE,YAOA,SAASC,KAoDP,QAASC,GAA2BC,EAAWC,GAC7C,GAAIjB,GAAKC,IAETD,GAAGkB,eACDC,eAAgBnB,EAAGmB,eAAiBnB,EAAGmB,eAAiB,KACxDC,qBAAsBpB,EAAGoB,qBAAuBpB,EAAGoB,qBAAuB,GAC1EC,sBAAuBrB,EAAGqB,sBAAwBrB,EAAGqB,sBAAwB,MAC7EC,cAAetB,EAAGsB,cAAgBtB,EAAGsB,cAAgB,SACrDC,oBAAqBvB,EAAGuB,oBAAsBvB,EAAGuB,oBAAsB,GACvEC,qBAAsBxB,EAAGwB,qBAAuBxB,EAAGwB,qBAAuB,kBAC1EC,WAAYzB,EAAGyB,WAAazB,EAAGyB,WAAa,GAC5CC,SAAU1B,EAAG0B,SAAW1B,EAAG0B,SAAW,GACtCf,aAAcX,EAAGW,aACjBH,YAAaR,EAAGQ,YAChBmB,mBAAoB3B,EAAG2B,mBAAqB3B,EAAG2B,mBAAqB,QACpEC,aAAc5B,EAAG4B,aAAe5B,EAAG4B,aAAe,KAClDC,YAAa7B,EAAG6B,YAAc7B,EAAG6B,YAAc,QAGjD7B,EAAG8B,UAAY,WACb,GAAIC,GAAgBf,EAAUgB,MAC5BC,UAAU,EACVC,SAAUlC,EAAGkB,cAAcW,YAC3BM,YAAa,qBACbvB,WAAY,oCACZwB,KAAMpC,EAAGkB,cAAcU,aACvBS,aAAc,KACdC,SACEvC,QAAS,WACP,OACEI,KAAMH,EAAGkB,kBAMjBa,GAAcQ,OAAOC,KAAK,SAAUrC,OApExC,GAAIsC,IACFC,SAAU,KACVP,YAAa,GACbQ,OACExB,eAAgB,IAChBE,sBAAuB,IACvBD,qBAAsB,IACtBE,cAAe,IACfE,qBAAsB,IACtBD,oBAAqB,IACrBE,WAAY,IACZC,SAAU,IACVf,aAAc,IACdH,YAAa,IACboB,aAAc,IACdD,mBAAoB,IACpBE,YAAa,KAEfe,KAAM,SAAUD,EAAOE,EAASC,GAC9BC,EAAEF,GAASG,GAAG,QAAS,SAAUC,GAC/BA,EAAEC,kBACFP,EAAM3C,GAAG8B,eAGblB,WAAYG,EACZsB,aAAc,KACdc,kBAAkB,EAGpB,OADApC,GAA2BF,SAAW,YAAa,cAC5C4B,EAtDT9C,QACGC,OAAO,6BACP6C,UAAU,0BAA2B3B,MAqG1C,SAAUlB,GACV,IACEA,EAASD,QAAQC,OAAO,6BACxB,MAAOqD,GACPrD,EAASD,QAAQC,OAAO,gCAE1BA,EAAOwD,KAAK,iBAAkB,SAASC,GACrCA,EAAeC,IAAI,qBACjB","file":"angular-confirm-bootstrap.min.js","sourcesContent":["/*!\n * angular.confirm.bootstrap\n * null\n * @license undefined\n * v0.1.4\n * 2017-03-21T14:15:16.028Z\n */\n(function () {\n  'use strict';\n\n  /**\n   * @ngdoc module\n   * @name angular.confirm.bootstrap\n   * @description Module that asks for a confirmation and offers the possibility to accept or cancel the action\n   */\n  angular.module('angular.confirm.bootstrap', [\n    'ui.bootstrap.modal'\n  ]);\n\n})();\n\n(function () {\n  'use strict';\n\n  angular\n    .module('angular.confirm.bootstrap')\n    .controller('AngularConfirmBootstrapController', angularConfirmBootstrapController);\n\n  function angularConfirmBootstrapController($uibModalInstance, Setting) {\n    var vm = this;\n    vm.dataModal = Setting.data;\n\n    vm.closeModal = function () {\n      $uibModalInstance.dismiss('cancel');\n    };\n\n    vm.actionCancel = function () {\n      if (vm.dataModal.acbOnCancel !== undefined) {\n        if (typeof(vm.dataModal.acbOnCancel) === typeof(Function)) {\n          vm.dataModal.acbOnCancel();\n        }\n      }\n      $uibModalInstance.close(false);\n    };\n\n    vm.actionOk = function () {\n      if (vm.dataModal.acbOnConfirm !== undefined) {\n        if (typeof(vm.dataModal.acbOnConfirm) === typeof(Function)) {\n          vm.dataModal.acbOnConfirm();\n        }\n      }\n      $uibModalInstance.close(false);\n    };\n\n  }\n  angularConfirmBootstrapController.$inject = [\"$uibModalInstance\", \"Setting\"];\n})();\n\n\n(function () {\n  'use strict';\n\n  angular\n    .module('angular.confirm.bootstrap')\n    .directive('angularConfirmBootstrap', angularConfirmBootstrapDirective);\n\n  /** @ngInject */\n  function angularConfirmBootstrapDirective() {\n    /**\n     * directive.scope.options {\n        *  acbConfirmText: Type: string, text button action Ok by default 'Ok'\n        *  acbButtonConfirmClass: Type: string, default: empty\n        *  acbButtonConfirmIcon: Type: string(<i class=\"fa fa-...\"></i>), default: empty\n        *  acbCancelText: Type: string, text button action Ok by default 'Cancel'\n        *  acbButtonCancelClass: Type: string, default: empty\n        *  acbButtonCancelIcon: Type: string(<i class=\"fa fa-...\"></i>), default: empty\n        *  acbMessage: Type: string , main message\n        *  acbTitle: Type: string , title modal\n        *  acbOnConfirm: Type: function, callback function\n        *  acbOnCancel: Type: function, callback function\n        *  acbSizeModal: Type: string, size of modal by default 'lg'\n        *  acbPositionButtons: Type: string, Allowed Values:[left, center, right(default)],  position of buttons 'Ok' and 'Cancel'\n        *  acbBackdrop: Type: boolean|string, Allowed Values:[static(disables modal closing by click on the backdrop), false, true(default)], controls presence of a backdrop.\n    * }\n     **/\n\n\n    var directive = {\n      restrict: 'EA',\n      templateUrl: '',\n      scope: {\n        acbConfirmText: '@',\n        acbButtonConfirmClass: '@',\n        acbButtonConfirmIcon: '@',\n        acbCancelText: '@',\n        acbButtonCancelClass: '@',\n        acbButtonCancelIcon: '@',\n        acbMessage: '@',\n        acbTitle: '@',\n        acbOnConfirm: '&',\n        acbOnCancel: '&',\n        acbSizeModal: '@',\n        acbPositionButtons: '@',\n        acbBackdrop: '@'\n      },\n      link: function (scope, element, attr) {\n        $(element).on('click', function (e) {\n          e.stopPropagation();\n          scope.vm.openModal();\n        });\n      },\n      controller: directiveConfirmController,\n      controllerAs: 'vm',\n      bindToController: true\n    };\n    directiveConfirmController.$inject = [\"$uibModal\", \"$translate\"];\n    return directive;\n\n    /** @ngInject */\n    function directiveConfirmController($uibModal, $translate) {\n      var vm = this;\n\n      vm.confirmValues = {\n        acbConfirmText: vm.acbConfirmText ? vm.acbConfirmText : \"Ok\",\n        acbButtonConfirmIcon: vm.acbButtonConfirmIcon ? vm.acbButtonConfirmIcon : '',\n        acbButtonConfirmClass: vm.acbButtonConfirmClass ? vm.acbButtonConfirmClass : 'btn',\n        acbCancelText: vm.acbCancelText ? vm.acbCancelText : \"Cancel\",\n        acbButtonCancelIcon: vm.acbButtonCancelIcon ? vm.acbButtonCancelIcon : '',\n        acbButtonCancelClass: vm.acbButtonCancelClass ? vm.acbButtonCancelClass : 'btn btn-default',\n        acbMessage: vm.acbMessage ? vm.acbMessage : '',\n        acbTitle: vm.acbTitle ? vm.acbTitle : '',\n        acbOnConfirm: vm.acbOnConfirm,\n        acbOnCancel: vm.acbOnCancel,\n        acbPositionButtons: vm.acbPositionButtons ? vm.acbPositionButtons : 'right',\n        acbSizeModal: vm.acbSizeModal ? vm.acbSizeModal : 'md',\n        acbBackdrop: vm.acbBackdrop ? vm.acbBackdrop : 'true'\n      };\n\n      vm.openModal = function () {\n        var modalInstance = $uibModal.open({\n          keyboard: false,\n          backdrop: vm.confirmValues.acbBackdrop,\n          templateUrl: 'modal-confirm.html',\n          controller: 'AngularConfirmBootstrapController',\n          size: vm.confirmValues.acbSizeModal,\n          controllerAs: 'vm',\n          resolve: {\n            Setting: function () {\n              return {\n                data: vm.confirmValues\n              };\n            }\n          }\n        });\n\n        modalInstance.result.then(function (data) {\n\n        });\n      };\n\n    }\n\n  }\n})();\n\n(function(module) {\ntry {\n  module = angular.module('angular.confirm.bootstrap');\n} catch (e) {\n  module = angular.module('angular.confirm.bootstrap', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('modal-confirm.html',\n    '<div class=\"modal-header\"><button type=\"button\" class=\"close\" ng-click=\"vm.closeModal()\" aria-hidden=\"true\">x</button><h4 class=\"modal-title\">{{vm.dataModal.acbTitle}}</h4></div><div class=\"modal-body\"><div class=\"row\"><div class=\"col-md-12\"><h5>{{vm.dataModal.acbMessage}}</h5></div></div></div><div class=\"modal-footer\" ng-style=\"{\\'text-align\\' : vm.dataModal.acbPositionButtons}\"><button type=\"button\" ng-click=\"vm.actionCancel()\" ng-class=\"vm.dataModal.acbButtonCancelClass\"><i ng-class=\"vm.dataModal.acbButtonCancelIcon\"></i> {{vm.dataModal.acbCancelText}}</button> <button type=\"button\" ng-click=\"vm.actionOk()\" ng-class=\"vm.dataModal.acbButtonConfirmClass\"><i ng-class=\"vm.dataModal.acbButtonConfirmIcon\"></i> {{vm.dataModal.acbConfirmText}}</button></div>');\n}]);\n})();\n"]}