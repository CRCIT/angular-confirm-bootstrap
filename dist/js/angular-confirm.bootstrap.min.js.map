{"version":3,"sources":["angular-confirm.bootstrap.js"],"names":["angular","module","angularConfirmBootstrapController","$uibModalInstance","Setting","vm","this","dataModal","data","closeModal","dismiss","actionCancel","undefined","onCancel","close","actionOk","onConfirm","controller","$inject","angularConfirmBootstrapDirective","directiveConfirmController","$uibModal","$translate","confirmValues","confirmText","buttonConfirmIcon","buttonConfirmClass","cancelText","buttonCancelIcon","buttonCancelClass","message","title","positionButtons","sizeModal","backdrop","openModal","modalInstance","open","keyboard","templateUrl","size","controllerAs","resolve","result","then","directive","restrict","scope","link","element","attr","$","on","e","stopPropagation","bindToController","run","$templateCache","put"],"mappings":"CAOA,WACE,YAOAA,SAAQC,OAAO,6BACb,2BAKJ,WACE,YAMA,SAASC,GAAkCC,EAAmBC,GAC5D,GAAIC,GAAKC,IACTD,GAAGE,UAAYH,EAAQI,KAEvBH,EAAGI,WAAa,WACdN,EAAkBO,QAAQ,WAG5BL,EAAGM,aAAe,WACcC,SAA1BP,EAAGE,UAAUM,gBACJR,GAAGE,UAAkB,gBAAY,WAC1CF,EAAGE,UAAUM,WAGjBV,EAAkBW,OAAM,IAG1BT,EAAGU,SAAW,WACmBH,SAA3BP,EAAGE,UAAUS,iBACJX,GAAGE,UAAmB,iBAAY,WAC3CF,EAAGE,UAAUS,YAGjBb,EAAkBW,OAAM,IA3B5Bd,QACGC,OAAO,6BACPgB,WAAW,oCAAqCf,GA6BnDA,EAAkCgB,SAAW,oBAAqB,cAIpE,WACE,YAOA,SAASC,KAqDP,QAASC,GAA2BC,EAAWC,GAC7C,GAAIjB,GAAKC,IAETD,GAAGkB,eACDC,YAAanB,EAAGmB,YAAcnB,EAAGmB,YAAc,UAC/CC,kBAAmBpB,EAAGoB,kBAAoBpB,EAAGoB,kBAAoB,GACjEC,mBAAoBrB,EAAGqB,mBAAqBrB,EAAGqB,mBAAqB,MACpEC,WAAYtB,EAAGsB,WAAatB,EAAGsB,WAAa,WAC5CC,iBAAkBvB,EAAGuB,iBAAmBvB,EAAGuB,iBAAmB,GAC9DC,kBAAmBxB,EAAGwB,kBAAoBxB,EAAGwB,kBAAoB,kBACjEC,QAASzB,EAAGyB,QAAUzB,EAAGyB,QAAU,iBACnCC,MAAO1B,EAAG0B,MAAQ1B,EAAG0B,MAAQ,eAC7Bf,UAAWX,EAAGW,UACdH,SAAUR,EAAGQ,SACbmB,gBAAiB3B,EAAG2B,gBAAkB3B,EAAG2B,gBAAkB,QAC3DC,UAAW5B,EAAG4B,UAAY5B,EAAG4B,UAAY,KACzCC,SAAU7B,EAAG6B,SAAW7B,EAAG6B,SAAW,QAGxC7B,EAAG8B,UAAY,WACb,GAAIC,GAAgBf,EAAUgB,MAC5BC,UAAU,EACVJ,SAAU7B,EAAGkB,cAAcW,SAC3BK,YAAa,qBACbtB,WAAY,oCACZuB,KAAMnC,EAAGkB,cAAcU,UACvBQ,aAAc,KACdC,SACEtC,QAAS,WACP,OACEI,KAAMH,EAAGkB,kBAMjBa,GAAcO,OAAOC,KAAK,SAAUpC,OArExC,GAAIqC,IACFC,SAAU,KACVP,YAAa,GACbQ,OACEvB,YAAa,IACbE,mBAAoB,IACpBD,kBAAmB,IACnBE,WAAY,IACZE,kBAAmB,IACnBD,iBAAkB,IAClBE,QAAS,IACTC,MAAO,IACPf,UAAW,IACXH,SAAU,IACVoB,UAAW,IACXD,gBAAiB,IACjBE,SAAU,KAEZc,KAAM,SAAUD,EAAOE,EAASC,GAC9BC,EAAEF,GAASG,GAAG,QAAS,SAAUC,GAC/BA,EAAEC,kBACFP,EAAM1C,GAAG8B,eAGblB,WAAYG,EACZqB,aAAc,KACdc,kBAAkB,EAIpB,OADAnC,GAA2BF,SAAW,YAAa,cAC5C2B,EAvDT7C,QACGC,OAAO,6BACP4C,UAAU,0BAA2B1B,MAsG1C,SAAUlB,GACV,IACEA,EAASD,QAAQC,OAAO,6BACxB,MAAOoD,GACPpD,EAASD,QAAQC,OAAO,gCAE1BA,EAAOuD,KAAK,iBAAkB,SAASC,GACrCA,EAAeC,IAAI,qBACjB","file":"angular-confirm.bootstrap.min.js","sourcesContent":["/*!\n * angular.confirm.bootstrap\n * null\n * @license undefined\n * v0.1.3\n * 2017-01-17T11:41:15.985Z\n */\n(function () {\r\n  'use strict';\r\n\r\n  /**\r\n   * @ngdoc module\r\n   * @name angular.confirm.bootstrap\r\n   * @description Module that asks for a confirmation and offers the possibility to accept or cancel the action\r\n   */\r\n  angular.module('angular.confirm.bootstrap', [\r\n    'ui.bootstrap.modal'\r\n  ]);\r\n\r\n})();\r\n\n(function () {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('angular.confirm.bootstrap')\r\n    .controller('AngularConfirmBootstrapController', angularConfirmBootstrapController);\r\n\r\n  function angularConfirmBootstrapController($uibModalInstance, Setting) {\r\n    var vm = this;\r\n    vm.dataModal = Setting.data;\r\n\r\n    vm.closeModal = function () {\r\n      $uibModalInstance.dismiss('cancel');\r\n    };\r\n\r\n    vm.actionCancel = function () {\r\n      if (vm.dataModal.onCancel !== undefined) {\r\n        if (typeof(vm.dataModal.onCancel) === typeof(Function)) {\r\n          vm.dataModal.onCancel();\r\n        }\r\n      }\r\n      $uibModalInstance.close(false);\r\n    };\r\n\r\n    vm.actionOk = function () {\r\n      if (vm.dataModal.onConfirm !== undefined) {\r\n        if (typeof(vm.dataModal.onConfirm) === typeof(Function)) {\r\n          vm.dataModal.onConfirm();\r\n        }\r\n      }\r\n      $uibModalInstance.close(false);\r\n    };\r\n\r\n  }\r\n  angularConfirmBootstrapController.$inject = [\"$uibModalInstance\", \"Setting\"];\r\n})();\r\n\r\n\n(function () {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('angular.confirm.bootstrap')\r\n    .directive('angularConfirmBootstrap', angularConfirmBootstrapDirective);\r\n\r\n  /** @ngInject */\r\n  function angularConfirmBootstrapDirective() {\r\n    /**\r\n     * directive.scope.options {\r\n        *  confirmText: Type: string, text button action Ok by default 'Ok'\r\n        *  buttonConfirmClass: Type: string, default: empty\r\n        *  buttonConfirmIcon: Type: string(<i class=\"fa fa-...\"></i>), default: empty\r\n        *  cancelText: Type: string, text button action Ok by default 'Cancel'\r\n        *  buttonCancelClass: Type: string, default: empty\r\n        *  buttonCancelIcon: Type: string(<i class=\"fa fa-...\"></i>), default: empty\r\n        *  message: Type: string , main message\r\n        *  title: Type: string , title modal\r\n        *  onConfirm: Type: function, callback function\r\n        *  onCancel: Type: function, callback function\r\n        *  sizeModal: Type: string, size of modal by default 'lg'\r\n        *  positionButtons: Type: string, Allowed Values:[left, center, right(default)],  position of buttons 'Ok' and 'Cancel'\r\n        *  backdrop: Type: boolean|string, Allowed Values:[static(disables modal closing by click on the backdrop), false, true(default)], controls presence of a backdrop.\r\n    * }\r\n     **/\r\n\r\n\r\n    var directive = {\r\n      restrict: 'EA',\r\n      templateUrl: '',\r\n      scope: {\r\n        confirmText: '@',\r\n        buttonConfirmClass: '@',\r\n        buttonConfirmIcon: '@',\r\n        cancelText: '@',\r\n        buttonCancelClass: '@',\r\n        buttonCancelIcon: '@',\r\n        message: '@',\r\n        title: '@',\r\n        onConfirm: '&',\r\n        onCancel: '&',\r\n        sizeModal: '@',\r\n        positionButtons: '@',\r\n        backdrop: '@'\r\n      },\r\n      link: function (scope, element, attr) {\r\n        $(element).on('click', function (e) {\r\n          e.stopPropagation();\r\n          scope.vm.openModal();\r\n        });\r\n      },\r\n      controller: directiveConfirmController,\r\n      controllerAs: 'vm',\r\n      bindToController: true\r\n    };\r\r\n    directiveConfirmController.$inject = [\"$uibModal\", \"$translate\"];\n    return directive;\r\n\r\n    /** @ngInject */\r\n    function directiveConfirmController($uibModal, $translate) {\r\n      var vm = this;\r\n\r\n      vm.confirmValues = {\r\n        confirmText: vm.confirmText ? vm.confirmText : \"Aceptar\",\r\n        buttonConfirmIcon: vm.buttonConfirmIcon ? vm.buttonConfirmIcon : '',\r\n        buttonConfirmClass: vm.buttonConfirmClass ? vm.buttonConfirmClass : 'btn',\r\n        cancelText: vm.cancelText ? vm.cancelText : \"Cancelar\",\r\n        buttonCancelIcon: vm.buttonCancelIcon ? vm.buttonCancelIcon : '',\r\n        buttonCancelClass: vm.buttonCancelClass ? vm.buttonCancelClass : 'btn btn-default',\r\n        message: vm.message ? vm.message : 'Sample message',\r\n        title: vm.title ? vm.title : 'Sample title',\r\n        onConfirm: vm.onConfirm,\r\n        onCancel: vm.onCancel,\r\n        positionButtons: vm.positionButtons ? vm.positionButtons : 'right',\r\n        sizeModal: vm.sizeModal ? vm.sizeModal : 'md',\r\n        backdrop: vm.backdrop ? vm.backdrop : 'true'\r\n      };\r\n\r\n      vm.openModal = function () {\r\n        var modalInstance = $uibModal.open({\r\n          keyboard: false,\r\n          backdrop: vm.confirmValues.backdrop,\r\n          templateUrl: 'modal-confirm.html',\r\n          controller: 'AngularConfirmBootstrapController',\r\n          size: vm.confirmValues.sizeModal,\r\n          controllerAs: 'vm',\r\n          resolve: {\r\n            Setting: function () {\r\n              return {\r\n                data: vm.confirmValues\r\n              };\r\n            }\r\n          }\r\n        });\r\n\r\n        modalInstance.result.then(function (data) {\r\n          \r\n        });\r\n      };\r\n\r\n    }\r\n\r\n  }\r\n})();\r\n\n(function(module) {\ntry {\n  module = angular.module('angular.confirm.bootstrap');\n} catch (e) {\n  module = angular.module('angular.confirm.bootstrap', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('modal-confirm.html',\n    '<div class=\"modal-header\"><button type=\"button\" class=\"close\" ng-click=\"vm.closeModal()\" aria-hidden=\"true\">x</button><h4 class=\"modal-title\">{{vm.dataModal.title}}</h4></div><div class=\"modal-body\"><div class=\"row\"><div class=\"col-md-12\"><h5>{{vm.dataModal.message}}</h5></div></div></div><div class=\"modal-footer\" ng-style=\"{\\'text-align\\' : vm.dataModal.positionButtons}\"><button type=\"button\" ng-click=\"vm.actionCancel()\" ng-class=\"vm.dataModal.buttonCancelClass\"><i ng-class=\"vm.dataModal.buttonCancelIcon\"></i> {{vm.dataModal.cancelText}}</button> <button type=\"button\" ng-click=\"vm.actionOk()\" ng-class=\"vm.dataModal.buttonConfirmClass\"><i ng-class=\"vm.dataModal.buttonConfirmIcon\"></i> {{vm.dataModal.confirmText}}</button></div>');\n}]);\n})();\n"]}